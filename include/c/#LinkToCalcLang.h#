#ifndef LINK_TO_CALC_LANG
#define LINK_TO_CALC_LANG

#include <stdbool.h>

#define IS_INT 0
#define IS_REAL 1
#define IS_DOLLAR 2
#define IS_PERCENT 3
#define IS_BOOL 4
#define IS_SET 5
#define IS_TUPLE 6

struct CalcLangVal;

typedef struct{
  int size;
  struct CalcLangVal** list;
} TupleValue;

typedef struct{
  int size;
  struct CalcLangVal** list;
} SetValue;

typedef union CalcLangValData{
  TupleValue* tuple;
  SetValue* set;
  int integer;
  double real;
  double dollar;
  double percent;
  bool boolean;
} CalcLangValueData;

typedef struct CalcLangVal{
  int valType;
  CalcLangValueData valData;
} CalcLangValue;

CalcLangValue* addCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* subCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* multCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* divCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* powCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* dotProductCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* equalsCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* lessThenCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* greaterThenCalcLangValues(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* lessThenOrEqualToCalcLangValue(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* greaterThenOrEqualToCalcLangValue(CalcLangValue* left, CalcLangValue* right);
CalcLangValue* notCalcLangValue(CalcLangValue* value);
CalcLangValue* negateCalcLangValue(CalcLangValue* value);
CalcLangValue* integerCalcLangValue(int input);
CalcLangValue* realCalcLangValue(float input);
CalcLangValue* dollarCalcLangValue(float input);
CalcLangValue* percentCalcLangValue(float percent);
CalcLangValue* tupleCalcLangValue(CalcLangValue**values, int size);
CalcLangValue* setCalcLangValue(CalcLangValue**values, int size);
bool toBool(CalcLangValue* val);
void printValue(CalcLangValue* val);
void printString(char* str);
void getInput();

#endif
